<?php

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * An oauth2 redirection endpoint which can be used for an application:
 * http://tools.ietf.org/html/draft-ietf-oauth-v2-26#section-3.1.2
 *
 * This is used because some oauth servers will not allow a redirect urls
 * with get params (like repository callback) and that needs to be called
 * using the state param.
 *
 * @package    core
 * @copyright  2012 Dan Poltawski
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

require_once __DIR__ . '/../config.php';
$issuer = null;
$issuers = core\oauth2\api::get_all_issuers(true);
foreach ($issuers as $loop_issuer) {
    if ($loop_issuer->get('name') == 'Clever') {
        $issuer = $loop_issuer;
    }
}
$clever_url = $issuer->get_endpoint_url('authorization');
// $clever_url = new moodle_url('https://clever.com/oauth/authorize');
// $issuer_id_prod = 1; //Oauth2 issuer ID as assigned in /admin/tool/oauth2/issuers.php
// $issuer_id_dev = 2;
// $issuer = \core\oauth2\api::get_issuer($issuer_id_prod);

$error = optional_param('error', '', PARAM_RAW);
if ($error) {
    $message = optional_param('error_description', '', PARAM_RAW);
    if ($message) {
        print_error($message);
    } else {
        print_error($error);
    }
}
//LTO modified
// try to handle Clever Portal initiated login
// add 'state' param along with following 3 params and redirect back to Clever
// - code    Yes    Code generated by Clever
// - scope    Yes    Scope assigned to your application by Clever
// - state    Only if provided via LIWC link    State value provided by your LIWC link
// When login is intiated from Clever portal, 'state' will be empty so create valid session
// and add as state param and redirect back to Clever.
// additional params: 'client_id', 'redirect_uri', 'response_type' are required by Clever

$state = optional_param('state', '', PARAM_RAW);
if ($state == '') {
    /*print_error('missing state');*/

    $stateparams['wantsurl'] = new moodle_url('/');
    $stateparams['sesskey'] = sesskey();
    $stateparams['id'] = $issuer->get('id');

    $params = array_merge(
        [
            /* 'channel' => $chanel, */
            /* 'client_id' => $client_id_prod, */
            /* 'district_id' => $district_id, */
            'client_id' => $issuer->get('clientid'),
            /*'redirect_uri' => $clever_redirect_url_prod, */
            'redirect_uri' => new moodle_url('/admin/oauth2callback.php'),
            'response_type' => 'code',
            'scope' => optional_param('scope', null, PARAM_RAW),
            'code' => optional_param('code', null, PARAM_RAW),
            'state' => new moodle_url('/auth/oauth2/login.php', $stateparams),
        ]
    );
    $backtocleverurl = new moodle_url($clever_url, $params);
    /*$backtocleverurl=new moodle_url($clever_url);*/
 
    error_log("*****************admincallback backtocleverurl redirect back to clever");
    error_log(print_r($backtocleverurl, true));
    redirect($backtocleverurl);
} else {
// The authorization code generated by the authorization server.
    $code = required_param('code', PARAM_RAW);
// The state parameter we've given (used in moodle as a redirect url).
    $state = required_param('state', PARAM_LOCALURL);
    error_log("admincallback state");
    error_log(print_r($state, true));

    $redirecturl = new moodle_url($state);
    $params = $redirecturl->params();

    if (isset($params['sesskey']) and confirm_sesskey($params['sesskey'])) {
        $redirecturl->param('oauth2code', $code);
        redirect($redirecturl);
    } else {
        print_error('invalidsesskey');
    }
}
